syntax = "proto2";

package ReflexEvent;

option java_package = "com.parallelmachines.reflex.common";
option java_outer_classname = "ReflexEventJava";

message ReflexEvent {
    required EventType eventType = 1;
    optional string eventLabel = 2;
    required bytes data = 3;
    optional string modelId = 4;
    optional bool isAlert = 5;     // If not present, assume false

    enum EventType {
        GenericEvent = 0;

        // Alerts
        Anomaly = 50;               //used for anomalies events
        Alert = 51;                 //used when sending histogram alerts
        GenericDataAlert = 52;      //used for data alerts sent from user's app level layer
        GenericHealthAlert = 53;    //used for health alerts sent from user's app level layer
        GenericSystemAlert = 54;    //used for system alerts sent from user's app level layer

        // Model
        Model = 100;                //used for Model events
        MLHealthModel = 101;        //used for MLHealth events
        ModelAccepted = 102;        //sent when model is accepted by algo

        // Canary
        CanaryMessage = 150;        //used for events sent from canary pipelines to comparator
        CanaryHealth = 151;         //used for events sent from comparator pipeline

        // Stats
        StatsMessage = 200;         //used for mlops stats sent from user's app to eco agent
    }
}